knitr::opts_chunk$set(echo=FALSE)
Rscript --help
?Rscript
install.packages("pandocfilters")
knitr::opts_chunk$set(echo=FALSE)
library(tidyverse)
library(ggplot2)
library(stringr)
library(ggrepel)
MoistureLogInfo = read_csv("https://raw.githubusercontent.com/DJ-Prince/OPC/master/MoistureAnalysisLog/Moisture%20Analysis%20Log%20v1.1%20Jan%2029-Feb12.csv")
#read_csv
MoistureLogInfo[MoistureLogInfo == ""] <- NA
MoistureLogInfo <- MoistureLogInfo[complete.cases(MoistureLogInfo[,1]),]
MoistureLogInfo <- MoistureLogInfo[-1,]
colnames(MoistureLogInfo) = c("Date", "Time", "Variety", "Harvest.Batch.ID", "Moisture.Status", "Badge", "Variance", "Moisture", "Days.in.Dry", "Days.in.Cure", "Starting.Weight", "Ending.Weight", "Testing.Temp", "Testing.Time", "Waste.Reported", "Issue.Category", "Issue.Type", "Notes")
#typeof(MoistureLogInfoClean)
#Various cleaning steps are done here, including changing data into the correct type and filtering on completion status.
MoistureLogInfo$Moisture <- as.numeric(MoistureLogInfo$Moisture)
MoistureLogInfo$Days.in.Dry <- as.numeric(MoistureLogInfo$Days.in.Dry)
MoistureLogInfo$Days.in.Cure <- as.numeric(MoistureLogInfo$Days.in.Cure)
MoistureLogInfo$Variance <- as.numeric(MoistureLogInfo$Variance)
MoistureLogInfo$Starting.Weight <- as.numeric(MoistureLogInfo$Starting.Weight)
MoistureLogInfo$Ending.Weight <- as.numeric(MoistureLogInfo$Ending.Weight)
MoistureLogInfo$Testing.Temp <- as.numeric(MoistureLogInfo$Testing.Temp)
MoistureLogInfo$Waste.Reported <- as.numeric(MoistureLogInfo$Waste.Reported)
MoistureLogInfo$Date <- as.Date(MoistureLogInfo$Date, format = "%m/%d/%Y")
MoistureLogInfo <- MoistureLogInfo %>% mutate(TotalDays = (Days.in.Dry + Days.in.Cure))
MoistureLogInfoClean <- MoistureLogInfo %>% filter(Moisture.Status != "Complete")
MoistureLogInfoClean
testMultiplePlots = MoistureLogInfoClean %>% filter(Days.in.Cure == 0)
ggplot(testMultiplePlots, aes(Days.in.Dry, Moisture, label = Moisture, group = 1)) +
facet_wrap(~Variety, scales = "free_x") +
geom_point() +
geom_line(data=testMultiplePlots[!is.na(testMultiplePlots$Moisture),], color = "blue") +
geom_hline(yintercept = 9) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 5)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 5)) +
geom_label_repel(aes(label=ifelse(Moisture<10.5,Moisture,'')),hjust=1,vjust=-2)
testMultiplePlots = MoistureLogInfoClean %>% filter(Days.in.Cure == 0)
ggplot(testMultiplePlots, aes(Days.in.Dry, Moisture, label = Moisture)) +
facet_wrap(~Variety, scales = "free_x") +
geom_point() + geom_smooth(method = "lm", se = FALSE) + geom_hline(yintercept = 9) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 5)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 5)) +
geom_label_repel(aes(label=ifelse(Moisture<10.5,Moisture,'')),hjust=1,vjust=-2)
NumEquipIssues = MoistureLogInfoClean %>% filter(Issue.Category == "Equipment") %>% summarize(count = n())
NumQualIssues = MoistureLogInfoClean %>% filter(Issue.Category == "Quality") %>% summarize(count = n())
ReadyToHarvest = MoistureLogInfoClean
ReadyToHarvest = ReadyToHarvest %>% filter(Moisture <= 10)
print(select(ReadyToHarvest, Variety, Harvest.Batch.ID, Moisture, Notes), n = 1e3)
NeedTested = MoistureLogInfoClean
#Take max date of each strain and compare weith sys date
NeedTested = NeedTested %>% filter(as.Date(Sys.Date(), "%m/%d/%Y") - as.Date(NeedTested$Date, "%m/%d/%Y") == 2)
print(select(NeedTested, Date, Variety, Harvest.Batch.ID, Moisture, Notes), n = 1e3)
testMultiplePlots = MoistureLogInfoClean
ggplot(testMultiplePlots, aes(TotalDays, Moisture, label = Moisture)) +
facet_wrap(~Variety, scales = "free_x") +
geom_point() + geom_smooth(method = "lm", se = FALSE, linetype = "dashed") + geom_hline(yintercept = 9) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 5)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 5)) +
geom_label_repel(aes(label=ifelse(Moisture<10.5,Moisture,'')),hjust=1,vjust=-2)
WeightMoisture = MoistureLogInfoClean %>% filter(Days.in.Dry == 2)
ggplot(WeightMoisture, aes(y = Moisture, x = Starting.Weight)) +
geom_point() + geom_smooth(method = "lm", se = FALSE) + geom_hline(yintercept = 9) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10))
